trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#variables:
#  - template: config.yaml
#  - template: variables.yaml
#  - template: common-variables.yaml

parameters:

- name: serviceArmAws
  displayName: Select AWS Service Connection
  default: AWSDevOktaTerraform
  type: string

- name: projectName
  displayName: Enter Project Name
  default: poc1
  type: string

- name: envType
  displayName: Select Type of Environment
  default: dev
  type: string
  values:
    - dev
    - test
    - prod

- name: destroyResource
  displayName: Do you want to destroy the resources?
  default: false
  type: boolean
  values:
    - true
    - false

variables:
  projectName: '${{ parameters.projectName }}'
  serviceArmAws: ${{ parameters.serviceArmAws }}
  envType: ${{ parameters.envType }}
  terraformDir: aws-terraform/terraform
  terraformBackend: 'tstatebucket01ohio'

jobs:

- job: terraform
  displayName: Run Terraform
  steps:

  - task: TerraformTaskV1@0
    displayName: Terraform Init (AWS)
    inputs:
      provider: 'aws'
      command: 'init'
      backendServiceAWS: '$(serviceArmAws)'
      backendAWSBucketName: '$(terraformBackend)'
      backendAWSKey: 'terraform.tfstate'
      workingDirectory: '$(terraformDir)'

#  - task: TerraformTaskV1@0
#    displayName: Terraform Plan (AWS)
#    inputs:
#      provider: 'aws'
#      command: 'plan'
#      environmentServiceNameAWS: '$(serviceArmAws)'
#      workingDirectory: '$(terraformDir)'
#
#  - task: TerraformTaskV1@0
#    displayName: Terraform Apply (AWS)
#    name: awsTerraformApply
#    inputs:
#      provider: 'aws'
#      command: 'apply'
#      environmentServiceNameAWS: '$(serviceArmAws)'
#      workingDirectory: '$(terraformDir)'
#      commandOptions: --auto-approve -lock=false
