trigger:
- master

pool:
  name: 'Azure Pipelines'
#  vmImage: 'AWS'

#variables:
#  - template: config.yaml
#  - template: variables.yaml
#  - template: common-variables.yaml

parameters:

- name: serviceArmAws
  displayName: Select AWS Service Connection
  default: aws-9154-terraform
  type: string
  values:
    - AWSDevOktaTerraform
    - aws-9154-terraform

- name: region
  displayName: Select AWS Region
  default: us-east-1
  type: string
  values:
    - us-east-1
    - us-east-2

- name: terraformBackend
  displayName: Terraform Backend S3 Bucket
  default: innovalab-working-bucket
  type: string
  values:
    - innovalab-working-bucket
    - tstatebucket01ohio


- name: projectName
  displayName: Enter Project Name
  default: poc1
  type: string

- name: envType
  displayName: Select Type of Environment
  default: dev
  type: string
  values:
    - dev
    - test
    - prod

- name: sshKeyPair
  displayName: Enter existing SSH Key Pair Name
  default: devoktakeyohio
  type: string

- name: destroyResource
  displayName: Do you want to destroy the resources?
  default: false
  type: boolean
  values:
    - true
    - false

variables:
  projectName: ${{ parameters.projectName }}
  serviceArmAws: ${{ parameters.serviceArmAws }}
  envType: ${{ parameters.envType }}
  sshKeyPair: ${{ parameters.sshKeyPair }}
  terraformDir: terraform-eks
  terraformBackend: ${{ parameters.terraformBackend }}
  region: ${{ parameters.region }}

jobs:

- job: terraform
  displayName: Run Terraform
  steps:

  - powershell: |

      aws sts get-caller-identity
      aws s3 ls

#      Add-Content $(terraformDir)/terraform.tfvars "`n"
#      Add-Content $(terraformDir)/terraform.tfvars 'project_name = "$(projectName)"'
#      Add-Content $(terraformDir)/terraform.tfvars 'env_type = "$(envType)"'
#
#      Add-Content $(terraformDir)/terraform.tfvars 'vpc_cidr = "11.0.0.0/16"'
#      Add-Content $(terraformDir)/terraform.tfvars 'node_ssh_key = "$(sshKeyPair)"'
#
#      echo 'Reading Terraform Variables....'
#
#      Get-Content -Path $(terraformDir)/terraform.tfvars

    name: setVariables
    displayName: Setting Variables

  - task: TerraformTaskV1@0
    displayName: Terraform Init (AWS)
    inputs:
      provider: 'aws'
      command: 'init'
      region: '$(region)'
      backendServiceAWS: '$(serviceArmAws)'
      backendAWSBucketName: '$(terraformBackend)'
      backendAWSKey: 'terraform.tfstate'
      workingDirectory: '$(terraformDir)'

  - task: TerraformTaskV1@0
    displayName: Terraform Plan (AWS)
    inputs:
      provider: 'aws'
      command: 'plan'
      region: '$(region)'
      environmentServiceNameAWS: '$(serviceArmAws)'
      workingDirectory: '$(terraformDir)'
